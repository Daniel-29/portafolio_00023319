#include<iostream>
#include<stack>
#include <string.h>

using namespace std;
stack <char> s;
stack <char> r;

int tipo(char e){
    if( e =='('){
        return 0;
    }else if(e ==')' ){
        return 1;
    }else if(e == '+' || e == '-' || e == '*' || e == '/' || e == '$'){
        return 2;
    }else if(isalpha(e) || isdigit(e)){
        return 3;
    }
}
 
int prioridad(char e){
    int pri = 0;
    if( e =='$'){
         pri = 3;
    }
    else if(e == '*' || e == '/' ){
         pri = 2;
    }else if(e == '+' || e == '-'){
         pri = 1;
    }
    return pri;
}
void vaciar_post(){
    while(!s.empty()){
        char ch = s.top();
        if(tipo(ch)==0  ){
            s.pop();
            break;
        }else {
            r.push( ch ); 
            s.pop();
        }
    }
}

void vaciar_pre(){
    while(!s.empty()){
        char ch = s.top();
        if(tipo(ch)==0 || tipo(ch) ==1 ){
            s.pop(); 
            break;
        }else{
            r.push( ch ); 
            s.pop();
        }
    }
}
void imprimir_post(){
    string b="";
    while(!r.empty()){
        b = b+r.top();
        r.pop();
    }
    for(int i =b.length(); i >= 0 ; i--){
        std::cout << b[i-1];
    }
    std::cout << endl;

}

void imprimir_pre(){
    string b="";
    while(!r.empty()){
        b = b+r.top();
        r.pop();
    }
    std::cout << b << std::endl;
}

void operador_post(char e){
    if(s.empty() || tipo(s.top())==0 ){
        s.push(e);
        
    }else{
        if(prioridad(e) > prioridad( s.top() )){
            s.push(e);
        }else{
            r.push(s.top());
            s.pop();
            operador_post(e);
        }
    }
}

void operador_pre(char e){
    if(s.empty() || tipo(s.top())==0 ){
        s.push(e);
    }else{
        if(prioridad(e) >= prioridad(s.top())){
             s.push(e);
        }else{
            r.push(s.top());
            s.pop();
            operador_pre(e);
        }
    }
}
void  postfija(string a,int p){
    if(a.length() == p){
        vaciar_post();
        imprimir_post();
       
    }else{
        char ch = a[p];
        int is = tipo(ch);
        switch(is){
            case 0: 
                s.push(ch);
                break;
            case 1:
                vaciar_post();
                break;
            case 2:
                operador_post(ch);
                break;
            case 3:
                r.push(ch);
                break;
        }
        postfija(a,p+1);
    }
}

void  prefija(string a,int p){
    if(p ==-1){
        vaciar_pre();
        imprimir_pre();
    }else{
        char ch = a[p];
        int is = tipo(ch);
        switch(is){
            case 0: 
                vaciar_pre();
                break;
            case 1:
                s.push(ch);
                break;
            case 2:
                operador_pre(ch);
                break;
            case 3:
                r.push(ch);
                break;
        }
        prefija(a,p-1);
    }
}


int main()
{
    string a = "A+B";
    string b = "A+B-C";
    string c = "A+(B*C)";
    string d = "(A+B)*C";
    string e = "(A+B)*(C-D)";
    string f = "A$B*C-D+E/F/(G+H)";
    string g = "((A+B)*C-(D-E))$(F+G)";
    string h = "A-B/(C*D$E)";
    string i = "A+B*C+D-E*F";
    string j = "(A+B)*(C+D-E)*F";
    
    cout<<"Postfija"<<endl<<endl;
    postfija(a,0);
    postfija(b,0);
    postfija(c,0);
    postfija(d,0);
    postfija(e,0);
    postfija(f,0);
    postfija(g,0);
    postfija(h,0);
    postfija(i,0);
    postfija(j,0);
    
    cout<<endl;
    
    cout<<"Prefija"<<endl<<endl;

    int p = a.length();
    prefija(a,p-1);
    
    p = b.length();
    prefija(b,p-1);
    
    p = c.length();
    prefija(c,p-1);
    
    p = d.length();
    prefija(d,p-1);
    
    p = e.length();
    prefija(e,p-1);
    
    p = f.length();
    prefija(f,p-1);
    
    p = g.length();
    prefija(g,p-1);
    
    p = h.length();
    prefija(h,p-1);
    
    p = i.length();
    prefija(i,p-1);
    
    p = j.length();
    prefija(j,p-1);
    return 0;
}